@page "/checkboxlist"

<RadzenExample Name="CheckBoxList">
<div class="row">
    <div class="col-md-6">
        <h3>CheckBoxList with horizontal orientation</h3>
        <RadzenCheckBoxList @bind-Value="values" TValue="int" Change="@((args) => Change(args, "CheckBoxList with horizontal orientation"))">
            <Items>
                <RadzenCheckBoxListItem Text="Orders" Value="1" />
                <RadzenCheckBoxListItem Text="Employees" Value="2" />
                <RadzenCheckBoxListItem Text="Customers" Value="3" />
            </Items>
        </RadzenCheckBoxList>
        <br />
        <h3>CheckBoxList with vertical orientation</h3>
        <RadzenCheckBoxList @bind-Value="values" TValue="int" Orientation="Orientation.Vertical" Change="@((args) => Change(args, "CheckBoxList with vertical orientation"))">
            <Items>
                <RadzenCheckBoxListItem Text="Orders" Value="1" />
                <RadzenCheckBoxListItem Text="Employees" Value="2" />
                <RadzenCheckBoxListItem Text="Customers" Value="3" />
            </Items>
        </RadzenCheckBoxList>
        <br />
        <h3>Disabled CheckBoxList with vertical orientation</h3>
        <RadzenCheckBoxList @bind-Value="values" Disabled="true" TValue="int" Orientation="Orientation.Vertical" Change="@((args) => Change(args, "CheckBoxList with vertical orientation"))">
            <Items>
                <RadzenCheckBoxListItem Text="Orders" Value="1" />
                <RadzenCheckBoxListItem Text="Employees" Value="2" />
                <RadzenCheckBoxListItem Text="Customers" Value="3" />
            </Items>
        </RadzenCheckBoxList>
        <br />
    </div>
    <div class="col-md-6">
        <h3>Events</h3>
        <RadzenCard style="overflow: auto;height:500px;">
            @foreach (var e in events.OrderByDescending(i => i.Key))
            {
                @e.Value
                <br />
            }
        </RadzenCard>
    </div>
</div>
</RadzenExample>

@code {
    IEnumerable<int> values = new int[] { 1 };

    Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();

    void Change(IEnumerable<int> value, string name)
    {
        var str = string.Join(", ", value);
        events.Add(DateTime.Now, $"{name} value changed to {str}");
    }
}
